#include<stdio.h>
#include<assert.h>
#include<string.h>
//char* my_strncpy(char* dest, char* src, int n)
//{
//	int i = 0;
//	for (i = 0; i < n; i++)
//	{
//		*dest++ = *src++;
//	}
//}
//
//
//int main()
//{
//	char arr1[] = "abcdef";
//	char arr2[] = "def";
//	my_strncpy(arr1, arr2,3);
//	printf("%s\n", arr1);
//	return 0;
//}


//char* my_strstr(const char* p1, const char* p2)
//{
//	assert(p1 != NULL);
//	assert(p2 != NULL);
//	char* s1 = p1;
//	char* s2 = p2;
//	char* cur = (char*)p1;
//	if (*p2 == '\0')
//	{
//		return p1;
//	}
//	while (*cur)
//	{
//		s1 = cur;
//		s2 = (char*)p2;
//		while ((*s1 != '\0') && (*s2 != '\0') && (*s1 == *s2))
//		{
//			s1++;
//			s2++;
//		}
//		if (*s2 == '\0')
//		{
//			return cur;//找到字串
//		}
//		if (*s1 == '\0')
//		{
//			return NULL;
//		}
//		cur++;
//	}
//	return NULL;//找不到字串
//}
//
//int main()
//{
//	const char* p1 = "abcdef";
//	const char* p2 = "def";
//	char* ret =my_strstr(p1, p2);
//	if (ret == NULL)
//	{
//		printf("字符串不存在\n");
//	}
//	else 
//	{
//		printf("%s\n", ret);
//	}
//	return 0;
//}




//int main()
//{
//	char arr[] = "192.168.31.121";
//	char* p = ".";
//	char buf[1024] = { 0 };
//	strcpy(buf, arr);
//	//切割buf中的字符串
//	char* ret = NULL;
//	for (ret = strtok(arr, p); ret != NULL; ret = strtok(NULL, p))
//	{
//		printf("%s\n", ret);
//	}
//	/*char*ret=strtok(arr, p);
//	printf("%s\n", ret);
//	ret = strtok(NULL, p);
//	printf("s\n", ret);*/
//	return 0;
//}

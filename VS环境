#include <stdio.h>
#include<stdlib.h>
//断电  f9切换断点
//int main()
//{
//	int i = 0;
//	for (i = 0; i < 100; i++)
//	{
//		printf("%d\n", i);
//	}
//	for (i = 0; i < 100; i++)
//	{
//		printf("%d\n", 10-i);
//	}
//	return 0;
//}



//int main()
//{
//	int i = 0;
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
//	for (i = 0; i < 12; i++)
//	{
//		printf("hehe\n");
//		arr[i] = 0;
//	}
//	return 0;
//}


//int Add(int x, int y)
//{
//	return x + y;
//}
//
//int main()
//{
//	printf("hehe\n");
//	int a = 20;
//	int b = 10;
//	int c = Add(a, b);
//	return 0;
//}






//void   my_strcpy(char* dest, char* src)
//{
//	while (*src != '\0')
//	{
//		*dest = *src;
//		src++;
//		dest++;
//	}
//	*dest = *src;
//}



//void   my_strcpy(char* dest, char* src)
//{
//	if (dest != NULL && src != NULL)
//	{
//		while (*dest++ = *src++)
//		{
//			;
//		}
//	}
//}


//#include<assert.h>
//char* my_strcpy(char* dest,const char* src)
//{
//	char* ret = dest;
//	assert(dest != NULL);//断言
//	assert(src != NULL);
//	//把src指向的字符串拷贝到dest指向的空间,包含的'\0'字符
//		while (*dest++ = *src++)
//		{
//			;
//		}
//		return ret;
//}
//
//
//
//
//int main()
//{
//	//strcpy
//	//字符串拷贝
//	char arr1[] = "############";
//	char arr2[] = "bit";
//	//my_strcpy(arr1,arr2);
//	printf("%s\n", my_strcpy(arr1,arr2));
//	return 0;
//}




//int main()
//{
//	const int num = 10;
//	const int*  p = &num;
//	*p = 20;//const 放在指针变量*左边时,修饰的是*p,也就是说1,不能通过p来改变*p的值
//	int* const p;//const放在指针右边时,修饰的是p,p不能被改变
//	int n = 100;
//	p = &n;
//	printf("%d\n", num);
//	return 0;
//}




//#include<assert.h>
//int my_strcpy(const char* str)
//{
//	int count = 0;
//	assert(str != NULL);
//	while (*str != '\0')
//	{
//		count++;
//		str++;
//	}
//	return count;
//}
//
//int main()
//{
//	char arr[] = "abcdef";
//	int len = my_strcpy(arr);
//	printf("%d\n", len);
//	return 0;
//}
